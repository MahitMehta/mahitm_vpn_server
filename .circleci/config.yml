version: 2.1

commands: 
  doctl_install:
    description: Install the doctl, if not available
    steps:
      - run: 
          command: |
            cat /etc/os-release
      - run: 
          command: |
            apk update
            apk upgrade --available
            apk --no-cache add doctl
      - run: 
          command: |
            doctl version     
  doctl_initialize:
    description: Initilize the digitalocean CLI
    parameters:
      digitalocean-access-token:
        default: DIGITALOCEAN_ACCESS_TOKEN
        description: |
          Name of environment variable storing the digitalocean v2 api access token
        type: env_var_name
    steps:
      - run:
          command: |
            doctl auth init -t $<<parameters.digitalocean-access-token>>
          name: Initialize doctl

jobs:    
  setup_droplet: 
    docker: 
      - image: cimg/base:2023.06
    steps: 
      - checkout
      - run:
            name: Connect to Droplet via SSH and Execute Setup Script
            command: |
              ssh -o StrictHostKeyChecking=no $SSH_USER@$WG_HOST 'sh' < ./scripts/setup.sh
  build: 
    parameters:
      digitalocean-access-token:
        default: DIGITALOCEAN_ACCESS_TOKEN
        description: |
          Name of environment variable storing the digitalocean v2 api access token
        type: env_var_name
    docker: 
      - image: docker:24.0.2-git
        environment: 
          WG_HOST=$WG_HOST
          WG_PORT=$WG_PORT
          WG_TUNNEL_ID=$WG_TUNNEL_ID
          FIREBASE_PROJECT_ID=$FIREBASE_PROJECT_ID
          FIREBASE_CLIENT_ID=$FIREBASE_CLIENT_ID
          FIREBASE_CLIENT_SECRET=$FIREBASE_CLIENT_SECRET
          FIREBASE_REFRESH_TOKEN=$FIREBASE_REFRESH_TOKEN
    resource_class: large
    steps: 
      - doctl_install
      - doctl_initialize
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run: 
          name: Docker Compose Build
          command: |
            docker compose -f docker-compose.yml -f production.yml build 
      - run: 
          name: Login to DigitalOcean Registry
          command: |
            doctl registry login
      - run: 
          name: Push to DigitalOcean Registry
          command: |  
            docker compose -f docker-compose.yml -f production.yml push 
  run_vpn: 
    docker: 
      - image: cimg/base:2023.06
    steps: 
      - checkout
      - run:
            name: Connect to Droplet via SSH and Run or Refresh Services
            command: |
              ssh -o StrictHostKeyChecking=no $SSH_USER@$WG_HOST 'sh' < ./scripts/run.sh

  build_amd64: 
    docker: 
      - image: cimg/rust:1.71
    resource_class: arm.large
    steps: 
      - run: 
          name: Install Debian Build Tool
          command: |
            cargo install cargo-deb 
workflows:
  build_and_upload: 
    jobs: 
      - setup_droplet: 
          context: mahitmvpn
      - build: 
          context: mahitmvpn
      - run_vpn: 
          context: mahitmvpn
          requires: 
            - setup_droplet
            - build
  build_release: 
    filters:
      tags:
        only:
          - /v.*/
    jobs: 
      - build_amd64
